# ※なるべく本番に近い設定値にしています。

#--------------------------------------------------------
# client configuration
#--------------------------------------------------------

server {
    server_name n-guild.docker;
    listen 80;

    add_header X-Frame-Options "SAMEORIGIN";
    add_header X-XSS-Protection "1; mode=block";
    add_header X-Content-Type-Options "nosniff";

    charset utf-8;

    access_log /var/log/nginx/n-guild.docker.access.log;
    error_log  /var/log/nginx/n-guild.docker.log;

    location / {
        proxy_redirect                      off;
        proxy_set_header X-Real-IP          $remote_addr;
        proxy_set_header X-Forwarded-For    $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto  $scheme;
        proxy_read_timeout                  1m;
        proxy_connect_timeout               1m;

        # Websocket support
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;

        # Proxy to the Node.JS instance of the client app
        proxy_pass http://client:3000;
    }
}


#--------------------------------------------------------
# api server configuration
#--------------------------------------------------------

server {
    server_name api.n-guild.docker;
    listen 80;

    index index.php index.html;
    root /var/www/src/api/public;
    # charset utf-8;

    access_log /var/log/nginx/api.n-guild.docker.access.log;
    error_log  /var/log/nginx/api.n-guild.docker.log;

    add_header X-Content-Type-Options nosniff;
    add_header X-XSS-Protection "1; mode=block";
    add_header X-Frame-Options SAMEORIGIN;

    client_max_body_size 20M;

    location / {
        try_files $uri $uri/ /index.php?$query_string;
    }

    location = /healthcheck.html {
        empty_gif;
        access_log off;
        break;
    }

    location ~ \.(js|css|png|jpg|gif|swf|ico|woff|pdf|mov|fla|zip)$ {
        access_log off;
        expires 10d;
        try_files $uri =404;
    }

    location ~ \.php$ {
        try_files $uri =404;
        fastcgi_split_path_info ^(.+\.php)(/.+)$;
        #NOTE: You should have "cgi.fix_pathinfo = 0;" in php.ini

        if (!-f $request_filename) {
            return 404;
            break;
        }

        include fastcgi_params;
        fastcgi_index index.php;
        fastcgi_param  PATH_INFO        $fastcgi_path_info;
        fastcgi_param  SCRIPT_FILENAME  $document_root$fastcgi_script_name;
        fastcgi_param  PATH_TRANSLATED  $document_root$fastcgi_script_name;
        fastcgi_pass api-php:9000;
    }

    error_page 404 /index.php;

    # redirect server error pages to the static page /50x.html
    #
    error_page 500 503 /50x.html;
    location = /50x.html {
        root /usr/share/nginx/html;
    }
    error_page 502 504 @maintenance;
    location @maintenance {
        root /var/www;
        rewrite ^(.*)$ /maintenance.html break;
    }
}
